{"ast":null,"code":"var _jsxFileName = \"/home/vasia/repos/ui-justpoker/src/Table.js\";\nimport React, { Fragment, useState } from \"react\";\nimport Player from \"./Player\";\nimport OpenSeat from \"./OpenSeat\";\nimport Card from \"./Card\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport green from \"@material-ui/core/colors/green\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport Typography from \"@material-ui/core/Typography\";\nconst tableHeightPercent = 65;\nconst tableWidthPercent = 65;\nconst tableAspectRatio = tableWidthPercent / tableHeightPercent;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: \"100%\",\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    ...theme.BACKGROUND\n  },\n  table: {\n    transform: \"translateY(-8%)\",\n    height: tableHeightPercent + \"%\",\n    width: tableWidthPercent + \"%\",\n    borderRadius: \"50%\",\n    margin: \"auto\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    ...theme.TABLE\n  },\n  spot: {\n    position: \"absolute\"\n  },\n  communityCards: {\n    height: \"25%\",\n    width: \"65%\",\n    display: \"flex\",\n    justifyContent: \"flex-start\"\n  },\n  pot: {\n    fontSize: 42,\n    position: \"absolute\",\n    transform: \"translateY(-12vh)\",\n    backgroundColor: \"rgba(0,0,0,0.4)\",\n    color: \"white\",\n    borderRadius: 40,\n    padding: \"12px 36px\"\n  },\n  button: {\n    position: \"absolute\",\n    zIndex: 10,\n    backgroundColor: \"gold\",\n    width: 30\n  },\n  bet: {\n    position: \"absolute\",\n    fontSize: \"16px\",\n    borderRadius: 30,\n    minWidth: \"30px\",\n    padding: \"0 10px\",\n    height: \"40px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    zIndex: 2,\n    ...theme.BET\n  }\n}));\n\nfunction Table(props) {\n  const classes = useStyles();\n  const {\n    players,\n    communityCards,\n    spots,\n    pot\n  } = props.table;\n  const playerPosScale = 0.35;\n  const betPosScale = 0.27;\n\n  function createSpotsAtTable() {\n    const ans = [];\n\n    for (let index = 0; index < spots; index++) {\n      const xPos = Math.cos(2 * 3.14 * index / spots) * window.innerWidth * tableAspectRatio;\n      const yPos = Math.sin(2 * 3.14 * index / spots) * window.innerHeight;\n      const player = players.find(p => p.position === index);\n\n      if (player) {\n        ans.push( /*#__PURE__*/React.createElement(Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Player, {\n          player: player,\n          className: classes.spot,\n          style: {\n            transform: `translate(${xPos * playerPosScale}px,${yPos * playerPosScale}px)`\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }\n        }), player.bet ? /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.bet,\n          style: {\n            transform: `translate(${xPos * betPosScale}px,${yPos * betPosScale}px)`\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }\n        }, player.bet) : null));\n      } else {\n        ans.push( /*#__PURE__*/React.createElement(OpenSeat, {\n          className: classes.spot,\n          style: {\n            transform: `translate(${xPos * playerPosScale}px,${yPos * playerPosScale}px)`\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 11\n          }\n        }));\n      }\n    }\n\n    return ans;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.pot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, `POT: ${pot}`)), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.communityCards,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, communityCards.map(c => /*#__PURE__*/React.createElement(Card, {\n    suit: c.suit,\n    number: c.number,\n    fontSize: 44,\n    style: {\n      width: \"18%\",\n      margin: 6\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }))), createSpotsAtTable()));\n}\n\nexport default Table;","map":{"version":3,"sources":["/home/vasia/repos/ui-justpoker/src/Table.js"],"names":["React","Fragment","useState","Player","OpenSeat","Card","makeStyles","green","blue","Typography","tableHeightPercent","tableWidthPercent","tableAspectRatio","useStyles","theme","root","height","width","display","justifyContent","alignItems","BACKGROUND","table","transform","borderRadius","margin","flexDirection","TABLE","spot","position","communityCards","pot","fontSize","backgroundColor","color","padding","button","zIndex","bet","minWidth","BET","Table","props","classes","players","spots","playerPosScale","betPosScale","createSpotsAtTable","ans","index","xPos","Math","cos","window","innerWidth","yPos","sin","innerHeight","player","find","p","push","map","c","suit","number"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport Player from \"./Player\";\nimport OpenSeat from \"./OpenSeat\";\nimport Card from \"./Card\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport green from \"@material-ui/core/colors/green\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst tableHeightPercent = 65;\nconst tableWidthPercent = 65;\nconst tableAspectRatio = tableWidthPercent / tableHeightPercent;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100%\",\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    ...theme.BACKGROUND,\n  },\n  table: {\n    transform: \"translateY(-8%)\",\n    height: tableHeightPercent + \"%\",\n    width: tableWidthPercent + \"%\",\n    borderRadius: \"50%\",\n    margin: \"auto\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    ...theme.TABLE,\n  },\n  spot: {\n    position: \"absolute\",\n  },\n  communityCards: {\n    height: \"25%\",\n    width: \"65%\",\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n  },\n  pot: {\n    fontSize: 42,\n    position: \"absolute\",\n    transform: \"translateY(-12vh)\",\n    backgroundColor: \"rgba(0,0,0,0.4)\",\n    color: \"white\",\n    borderRadius: 40,\n    padding: \"12px 36px\",\n  },\n  button: {\n    position: \"absolute\",\n    zIndex: 10,\n    backgroundColor: \"gold\",\n    width: 30,\n  },\n\n  bet: {\n    position: \"absolute\",\n    fontSize: \"16px\",\n    borderRadius: 30,\n    minWidth: \"30px\",\n    padding: \"0 10px\",\n    height: \"40px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    zIndex: 2,\n    ...theme.BET,\n  },\n}));\n\nfunction Table(props) {\n  const classes = useStyles();\n  const { players, communityCards, spots, pot } = props.table;\n\n  const playerPosScale = 0.35;\n  const betPosScale = 0.27;\n\n  function createSpotsAtTable() {\n    const ans = [];\n\n    for (let index = 0; index < spots; index++) {\n      const xPos =\n        Math.cos((2 * 3.14 * index) / spots) *\n        window.innerWidth *\n        tableAspectRatio;\n      const yPos = Math.sin((2 * 3.14 * index) / spots) * window.innerHeight;\n\n      const player = players.find((p) => p.position === index);\n      if (player) {\n        ans.push(\n          <Fragment>\n            <Player\n              player={player}\n              className={classes.spot}\n              style={{\n                transform: `translate(${xPos * playerPosScale}px,${\n                  yPos * playerPosScale\n                }px)`,\n              }}\n            />\n            {player.bet ? (\n              <div\n                className={classes.bet}\n                style={{\n                  transform: `translate(${xPos * betPosScale}px,${\n                    yPos * betPosScale\n                  }px)`,\n                }}\n              >\n                {player.bet}\n              </div>\n            ) : null}\n          </Fragment>\n        );\n      } else {\n        ans.push(\n          <OpenSeat\n            className={classes.spot}\n            style={{\n              transform: `translate(${xPos * playerPosScale}px,${\n                yPos * playerPosScale\n              }px)`,\n            }}\n          />\n        );\n      }\n    }\n    return ans;\n  }\n  return (\n    <div className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes.pot}>\n          <Typography variant=\"h4\">{`POT: ${pot}`}</Typography>\n        </div>\n        <div className={classes.communityCards}>\n          {communityCards.map((c) => (\n            <Card\n              suit={c.suit}\n              number={c.number}\n              fontSize={44}\n              style={{\n                width: \"18%\",\n                margin: 6,\n              }}\n            />\n          ))}\n        </div>\n        {createSpotsAtTable()}\n      </div>\n    </div>\n  );\n}\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}