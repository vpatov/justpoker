{"ast":null,"code":"import _defineProperty from\"/home/vasia/repos/poker_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/vasia/repos/poker_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from\"react\";import{makeStyles}from\"@material-ui/core/styles\";import{generateStringFromSuitNumber,SUITS}from\"./utils\";import classnames from\"classnames\";var useStyles=makeStyles(function(theme){var _ref;return _ref={root:{height:\"100%\",width:\"40%\",border:\"2px solid white\",borderRadius:6},valueText:{fontSize:\"20px\",color:\"white\"},hidden:_objectSpread({},theme.HIDDEN),center:{position:\"relative\",top:\"50%\",transform:\"translateY(-50%)\",textAlign:\"center\"},top:{position:\"relative\",textAlign:\"center\"},side:{position:\"relative\",overflowWrap:\"break-word\",width:\"60%\"}},_defineProperty(_ref,SUITS.HEARTS,_objectSpread({},theme.HEARTS)),_defineProperty(_ref,SUITS.SPADES,_objectSpread({},theme.SPADES)),_defineProperty(_ref,SUITS.CLUBS,_objectSpread({},theme.CLUBS)),_defineProperty(_ref,SUITS.DIAMONDS,_objectSpread({},theme.DIAMONDS)),_ref;});function Card(props){var classes=useStyles();var suit=props.suit,number=props.number,textPosition=props.textPosition,fontSize=props.fontSize,style=props.style,hidden=props.hidden;if(hidden){return/*#__PURE__*/React.createElement(\"div\",{className:classnames(classes.root,classes.hidden),style:style});}return/*#__PURE__*/React.createElement(\"div\",{className:classnames(classes.root,classes[suit]),style:style},/*#__PURE__*/React.createElement(\"div\",{className:classnames(classes.valueText,classes[textPosition||\"center\"],classes[suit]),style:{fontSize:fontSize}},generateStringFromSuitNumber(suit,number)));}export default Card;","map":{"version":3,"sources":["/home/vasia/repos/poker_web/src/ui/Card.js"],"names":["React","makeStyles","generateStringFromSuitNumber","SUITS","classnames","useStyles","theme","root","height","width","border","borderRadius","valueText","fontSize","color","hidden","HIDDEN","center","position","top","transform","textAlign","side","overflowWrap","HEARTS","SPADES","CLUBS","DIAMONDS","Card","props","classes","suit","number","textPosition","style"],"mappings":"qSAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,OAASC,4BAAT,CAAuCC,KAAvC,KAAoD,SAApD,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,GAAMC,CAAAA,SAAS,CAAGJ,UAAU,CAAC,SAACK,KAAD,wBAC3BC,IAAI,CAAE,CACJC,MAAM,CAAE,MADJ,CAEJC,KAAK,CAAE,KAFH,CAGJC,MAAM,CAAE,iBAHJ,CAIJC,YAAY,CAAE,CAJV,CADqB,CAO3BC,SAAS,CAAE,CACTC,QAAQ,CAAE,MADD,CAETC,KAAK,CAAE,OAFE,CAPgB,CAW3BC,MAAM,kBACDT,KAAK,CAACU,MADL,CAXqB,CAc3BC,MAAM,CAAE,CACNC,QAAQ,CAAE,UADJ,CAENC,GAAG,CAAE,KAFC,CAGNC,SAAS,CAAE,kBAHL,CAINC,SAAS,CAAE,QAJL,CAdmB,CAoB3BF,GAAG,CAAE,CACHD,QAAQ,CAAE,UADP,CAEHG,SAAS,CAAE,QAFR,CApBsB,CAwB3BC,IAAI,CAAE,CACJJ,QAAQ,CAAE,UADN,CAEJK,YAAY,CAAE,YAFV,CAGJd,KAAK,CAAE,KAHH,CAxBqB,uBA6B1BN,KAAK,CAACqB,MA7BoB,kBA8BtBlB,KAAK,CAACkB,MA9BgB,wBAgC1BrB,KAAK,CAACsB,MAhCoB,kBAiCtBnB,KAAK,CAACmB,MAjCgB,wBAmC1BtB,KAAK,CAACuB,KAnCoB,kBAoCtBpB,KAAK,CAACoB,KApCgB,wBAsC1BvB,KAAK,CAACwB,QAtCoB,kBAuCtBrB,KAAK,CAACqB,QAvCgB,SAAD,CAA5B,CA2CA,QAASC,CAAAA,IAAT,CAAcC,KAAd,CAAqB,CACnB,GAAMC,CAAAA,OAAO,CAAGzB,SAAS,EAAzB,CADmB,GAEX0B,CAAAA,IAFW,CAE6CF,KAF7C,CAEXE,IAFW,CAELC,MAFK,CAE6CH,KAF7C,CAELG,MAFK,CAEGC,YAFH,CAE6CJ,KAF7C,CAEGI,YAFH,CAEiBpB,QAFjB,CAE6CgB,KAF7C,CAEiBhB,QAFjB,CAE2BqB,KAF3B,CAE6CL,KAF7C,CAE2BK,KAF3B,CAEkCnB,MAFlC,CAE6Cc,KAF7C,CAEkCd,MAFlC,CAInB,GAAIA,MAAJ,CAAY,CACV,mBACE,2BAAK,SAAS,CAAEX,UAAU,CAAC0B,OAAO,CAACvB,IAAT,CAAeuB,OAAO,CAACf,MAAvB,CAA1B,CAA0D,KAAK,CAAEmB,KAAjE,EADF,CAGD,CACD,mBACE,2BAAK,SAAS,CAAE9B,UAAU,CAAC0B,OAAO,CAACvB,IAAT,CAAeuB,OAAO,CAACC,IAAD,CAAtB,CAA1B,CAAyD,KAAK,CAAEG,KAAhE,eACE,2BACE,SAAS,CAAE9B,UAAU,CACnB0B,OAAO,CAAClB,SADW,CAEnBkB,OAAO,CAACG,YAAY,EAAI,QAAjB,CAFY,CAGnBH,OAAO,CAACC,IAAD,CAHY,CADvB,CAME,KAAK,CAAE,CAAElB,QAAQ,CAAEA,QAAZ,CANT,EAQGX,4BAA4B,CAAC6B,IAAD,CAAOC,MAAP,CAR/B,CADF,CADF,CAcD,CAED,cAAeJ,CAAAA,IAAf","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { generateStringFromSuitNumber, SUITS } from \"./utils\";\nimport classnames from \"classnames\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100%\",\n    width: \"40%\",\n    border: \"2px solid white\",\n    borderRadius: 6,\n  },\n  valueText: {\n    fontSize: \"20px\",\n    color: \"white\",\n  },\n  hidden: {\n    ...theme.HIDDEN,\n  },\n  center: {\n    position: \"relative\",\n    top: \"50%\",\n    transform: \"translateY(-50%)\",\n    textAlign: \"center\",\n  },\n  top: {\n    position: \"relative\",\n    textAlign: \"center\",\n  },\n  side: {\n    position: \"relative\",\n    overflowWrap: \"break-word\",\n    width: \"60%\",\n  },\n  [SUITS.HEARTS]: {\n    ...theme.HEARTS,\n  },\n  [SUITS.SPADES]: {\n    ...theme.SPADES,\n  },\n  [SUITS.CLUBS]: {\n    ...theme.CLUBS,\n  },\n  [SUITS.DIAMONDS]: {\n    ...theme.DIAMONDS,\n  },\n}));\n\nfunction Card(props) {\n  const classes = useStyles();\n  const { suit, number, textPosition, fontSize, style, hidden } = props;\n\n  if (hidden) {\n    return (\n      <div className={classnames(classes.root, classes.hidden)} style={style} />\n    );\n  }\n  return (\n    <div className={classnames(classes.root, classes[suit])} style={style}>\n      <div\n        className={classnames(\n          classes.valueText,\n          classes[textPosition || \"center\"],\n          classes[suit]\n        )}\n        style={{ fontSize: fontSize }}\n      >\n        {generateStringFromSuitNumber(suit, number)}\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}