{"ast":null,"code":"import get from\"lodash/get\";import docCookies from\"../Cookies\";export var server={};var wsSubscriptions={};export function OpenWs(){var wsURI=\"ws://localhost:8080\";var clientId=docCookies.getItem(\"clientId\");if(clientId){wsURI+=\"?clientId=\".concat(clientId);}// open websocket\nserver.ws=new WebSocket(wsURI,[]);server.ws.onmessage=function(msg){console.log(msg);var jsonData=JSON.parse(get(msg,\"data\",{}));console.log(jsonData);if(jsonData.clientId){docCookies.setItem(\"clientId\",jsonData.clientId);}Object.keys(wsSubscriptions).forEach(function(key){if(jsonData[key]){wsSubscriptions[key].forEach(function(func){return func(jsonData[key]);});}});};return true;}export function Subscribe(key,onMessage){if(wsSubscriptions[key]){wsSubscriptions[key].push(onMessage);}else{wsSubscriptions[key]=[onMessage];}}","map":{"version":3,"sources":["/home/vasia/repos/poker_web/src/ui/api/ws.js"],"names":["get","docCookies","server","wsSubscriptions","OpenWs","wsURI","clientId","getItem","ws","WebSocket","onmessage","msg","console","log","jsonData","JSON","parse","setItem","Object","keys","forEach","key","func","Subscribe","onMessage","push"],"mappings":"AAAA,MAAOA,CAAAA,GAAP,KAAgB,YAAhB,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CAEA,MAAO,IAAMC,CAAAA,MAAM,CAAG,EAAf,CACP,GAAMC,CAAAA,eAAe,CAAG,EAAxB,CAEA,MAAO,SAASC,CAAAA,MAAT,EAAkB,CACvB,GAAIC,CAAAA,KAAK,CAAG,qBAAZ,CAEA,GAAMC,CAAAA,QAAQ,CAAGL,UAAU,CAACM,OAAX,CAAmB,UAAnB,CAAjB,CACA,GAAID,QAAJ,CAAc,CACZD,KAAK,sBAAiBC,QAAjB,CAAL,CACD,CAED;AACAJ,MAAM,CAACM,EAAP,CAAY,GAAIC,CAAAA,SAAJ,CAAcJ,KAAd,CAAqB,EAArB,CAAZ,CAEAH,MAAM,CAACM,EAAP,CAAUE,SAAV,CAAsB,SAACC,GAAD,CAAS,CAC7BC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAEA,GAAMG,CAAAA,QAAQ,CAAGC,IAAI,CAACC,KAAL,CAAWhB,GAAG,CAACW,GAAD,CAAM,MAAN,CAAc,EAAd,CAAd,CAAjB,CAEAC,OAAO,CAACC,GAAR,CAAYC,QAAZ,EAEA,GAAIA,QAAQ,CAACR,QAAb,CAAuB,CACrBL,UAAU,CAACgB,OAAX,CAAmB,UAAnB,CAA+BH,QAAQ,CAACR,QAAxC,EACD,CAEDY,MAAM,CAACC,IAAP,CAAYhB,eAAZ,EAA6BiB,OAA7B,CAAqC,SAACC,GAAD,CAAS,CAC5C,GAAIP,QAAQ,CAACO,GAAD,CAAZ,CAAmB,CACjBlB,eAAe,CAACkB,GAAD,CAAf,CAAqBD,OAArB,CAA6B,SAACE,IAAD,QAAUA,CAAAA,IAAI,CAACR,QAAQ,CAACO,GAAD,CAAT,CAAd,EAA7B,EACD,CACF,CAJD,EAKD,CAhBD,CAkBA,MAAO,KAAP,CACD,CAED,MAAO,SAASE,CAAAA,SAAT,CAAmBF,GAAnB,CAAwBG,SAAxB,CAAmC,CACxC,GAAIrB,eAAe,CAACkB,GAAD,CAAnB,CAA0B,CACxBlB,eAAe,CAACkB,GAAD,CAAf,CAAqBI,IAArB,CAA0BD,SAA1B,EACD,CAFD,IAEO,CACLrB,eAAe,CAACkB,GAAD,CAAf,CAAuB,CAACG,SAAD,CAAvB,CACD,CACF","sourcesContent":["import get from \"lodash/get\";\nimport docCookies from \"../Cookies\";\n\nexport const server = {};\nconst wsSubscriptions = {};\n\nexport function OpenWs() {\n  let wsURI = \"ws://localhost:8080\";\n\n  const clientId = docCookies.getItem(\"clientId\");\n  if (clientId) {\n    wsURI += `?clientId=${clientId}`;\n  }\n\n  // open websocket\n  server.ws = new WebSocket(wsURI, []);\n\n  server.ws.onmessage = (msg) => {\n    console.log(msg);\n    \n    const jsonData = JSON.parse(get(msg, \"data\", {}));\n\n    console.log(jsonData);\n\n    if (jsonData.clientId) {\n      docCookies.setItem(\"clientId\", jsonData.clientId);\n    }\n\n    Object.keys(wsSubscriptions).forEach((key) => {\n      if (jsonData[key]) {\n        wsSubscriptions[key].forEach((func) => func(jsonData[key]));\n      }\n    });\n  };\n\n  return true;\n}\n\nexport function Subscribe(key, onMessage) {\n  if (wsSubscriptions[key]) {\n    wsSubscriptions[key].push(onMessage);\n  } else {\n    wsSubscriptions[key] = [onMessage];\n  }\n}\n"]},"metadata":{},"sourceType":"module"}