{"ast":null,"code":"import get from \"lodash/get\";\nimport docCookies from \"../Cookies\";\nexport const server = {};\nconst wsSubscriptions = {};\nexport function OpenWs() {\n  let wsURI = \"ws://localhost:8080\";\n  const clientId = docCookies.getItem(\"clientId\");\n\n  if (clientId) {\n    wsURI += `?clientId=${clientId}`;\n  } // open websocket\n\n\n  server.ws = new WebSocket(wsURI, []);\n\n  server.ws.onmessage = msg => {\n    console.log(msg);\n    const jsonData = JSON.parse(get(msg, \"data\", {}));\n    console.log(jsonData);\n\n    if (jsonData.clientId) {\n      docCookies.setItem(\"clientId\", jsonData.clientId);\n    }\n\n    Object.keys(wsSubscriptions).forEach(key => {\n      if (jsonData[key]) {\n        wsSubscriptions[key].forEach(func => func(jsonData[key]));\n      }\n    });\n  };\n\n  return true;\n}\nexport function Subscribe(key, onMessage) {\n  if (wsSubscriptions[key]) {\n    wsSubscriptions[key].push(onMessage);\n  } else {\n    wsSubscriptions[key] = [onMessage];\n  }\n}","map":{"version":3,"sources":["/home/vasia/repos/poker_web/src/ui/api/ws.js"],"names":["get","docCookies","server","wsSubscriptions","OpenWs","wsURI","clientId","getItem","ws","WebSocket","onmessage","msg","console","log","jsonData","JSON","parse","setItem","Object","keys","forEach","key","func","Subscribe","onMessage","push"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,YAAhB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAO,MAAMC,MAAM,GAAG,EAAf;AACP,MAAMC,eAAe,GAAG,EAAxB;AAEA,OAAO,SAASC,MAAT,GAAkB;AACvB,MAAIC,KAAK,GAAG,qBAAZ;AAEA,QAAMC,QAAQ,GAAGL,UAAU,CAACM,OAAX,CAAmB,UAAnB,CAAjB;;AACA,MAAID,QAAJ,EAAc;AACZD,IAAAA,KAAK,IAAK,aAAYC,QAAS,EAA/B;AACD,GANsB,CAQvB;;;AACAJ,EAAAA,MAAM,CAACM,EAAP,GAAY,IAAIC,SAAJ,CAAcJ,KAAd,EAAqB,EAArB,CAAZ;;AAEAH,EAAAA,MAAM,CAACM,EAAP,CAAUE,SAAV,GAAuBC,GAAD,IAAS;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAEA,UAAMG,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWhB,GAAG,CAACW,GAAD,EAAM,MAAN,EAAc,EAAd,CAAd,CAAjB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;;AAEA,QAAIA,QAAQ,CAACR,QAAb,EAAuB;AACrBL,MAAAA,UAAU,CAACgB,OAAX,CAAmB,UAAnB,EAA+BH,QAAQ,CAACR,QAAxC;AACD;;AAEDY,IAAAA,MAAM,CAACC,IAAP,CAAYhB,eAAZ,EAA6BiB,OAA7B,CAAsCC,GAAD,IAAS;AAC5C,UAAIP,QAAQ,CAACO,GAAD,CAAZ,EAAmB;AACjBlB,QAAAA,eAAe,CAACkB,GAAD,CAAf,CAAqBD,OAArB,CAA8BE,IAAD,IAAUA,IAAI,CAACR,QAAQ,CAACO,GAAD,CAAT,CAA3C;AACD;AACF,KAJD;AAKD,GAhBD;;AAkBA,SAAO,IAAP;AACD;AAED,OAAO,SAASE,SAAT,CAAmBF,GAAnB,EAAwBG,SAAxB,EAAmC;AACxC,MAAIrB,eAAe,CAACkB,GAAD,CAAnB,EAA0B;AACxBlB,IAAAA,eAAe,CAACkB,GAAD,CAAf,CAAqBI,IAArB,CAA0BD,SAA1B;AACD,GAFD,MAEO;AACLrB,IAAAA,eAAe,CAACkB,GAAD,CAAf,GAAuB,CAACG,SAAD,CAAvB;AACD;AACF","sourcesContent":["import get from \"lodash/get\";\nimport docCookies from \"../Cookies\";\n\nexport const server = {};\nconst wsSubscriptions = {};\n\nexport function OpenWs() {\n  let wsURI = \"ws://localhost:8080\";\n\n  const clientId = docCookies.getItem(\"clientId\");\n  if (clientId) {\n    wsURI += `?clientId=${clientId}`;\n  }\n\n  // open websocket\n  server.ws = new WebSocket(wsURI, []);\n\n  server.ws.onmessage = (msg) => {\n    console.log(msg);\n    \n    const jsonData = JSON.parse(get(msg, \"data\", {}));\n\n    console.log(jsonData);\n\n    if (jsonData.clientId) {\n      docCookies.setItem(\"clientId\", jsonData.clientId);\n    }\n\n    Object.keys(wsSubscriptions).forEach((key) => {\n      if (jsonData[key]) {\n        wsSubscriptions[key].forEach((func) => func(jsonData[key]));\n      }\n    });\n  };\n\n  return true;\n}\n\nexport function Subscribe(key, onMessage) {\n  if (wsSubscriptions[key]) {\n    wsSubscriptions[key].push(onMessage);\n  } else {\n    wsSubscriptions[key] = [onMessage];\n  }\n}\n"]},"metadata":{},"sourceType":"module"}