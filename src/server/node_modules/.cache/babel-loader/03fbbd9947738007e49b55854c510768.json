{"ast":null,"code":"var _jsxFileName = \"/home/vasia/repos/poker_web/src/ui/MissionControl.js\";\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { server } from \"./api/ws\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport red from \"@material-ui/core/colors/red\";\nimport green from \"@material-ui/core/colors/green\";\nimport Button from \"@material-ui/core/Button\";\nimport Slider from \"@material-ui/core/Slider\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    height: \"10%\",\n    position: \"absolute\",\n    bottom: 0,\n    zIndex: 2,\n    ...theme.CONTROLLER\n  },\n  sizeAndBetActionsCont: {\n    marginLeft: \"auto\",\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"row-reverse\"\n  },\n  betActionsCont: {\n    width: \"30%\",\n    height: \"100%\",\n    display: \"flex\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\"\n  },\n  betSizeCont: {\n    width: \"30%\"\n  },\n  sliderCont: {\n    paddingTop: 10,\n    width: \"100%\"\n  },\n  amounts: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"space-evenly\"\n  },\n  slider: {\n    width: \"100%\"\n  },\n  button: {\n    width: \"30%\",\n    height: \"50%\",\n    backgroundColor: \"white\"\n  },\n  sizeButton: {\n    backgroundColor: \"white\"\n  }\n}));\n\nfunction MissionControl(props) {\n  const classes = useStyles();\n  const {\n    heroStack,\n    pot\n  } = props.missionControl;\n  const [betAmt, setBetAmt] = useState(0);\n\n  const changeBetAmonut = newAmt => {\n    setBetAmt(Math.min(Math.floor(newAmt), heroStack));\n  };\n\n  function onBet() {\n    console.log(\"bet\");\n    server.send(\"bet!\");\n  }\n\n  function onFold() {\n    server.send(\"fold!\");\n  }\n\n  function onCheckCall() {\n    server.send(\"check!\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.sizeAndBetActionsCont,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.betActionsCont,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    className: classes.button,\n    style: {\n      color: green[800]\n    },\n    onClick: () => onBet(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \"Bet\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    className: classes.button,\n    style: {\n      color: red[800]\n    },\n    onClick: () => onFold(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, \"Fold\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    className: classes.button,\n    style: {\n      color: blue[800]\n    },\n    onClick: () => onCheckCall(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, \"Check\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.betSizeCont,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.sliderCont,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    className: classes.slider,\n    value: betAmt,\n    step: 1,\n    valueLabelDisplay: \"on\",\n    min: 0,\n    max: heroStack,\n    onChange: (e, v) => setBetAmt(v),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.amounts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    className: classes.sizeButton,\n    onClick: e => changeBetAmonut(pot * 0.5),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, \"1/2\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    className: classes.sizeButton,\n    onClick: e => changeBetAmonut(pot * 0.75),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, \"3/4\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    className: classes.sizeButton,\n    onClick: e => changeBetAmonut(pot * 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, \"Pot\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    className: classes.sizeButton,\n    onClick: e => changeBetAmonut(pot * (Math.random() + 1)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, \"Overbet\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    className: classes.sizeButton,\n    onClick: e => changeBetAmonut(heroStack),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, \"Shuv\")))));\n}\n\nexport default MissionControl;","map":{"version":3,"sources":["/home/vasia/repos/poker_web/src/ui/MissionControl.js"],"names":["React","useState","makeStyles","server","blue","red","green","Button","Slider","useStyles","theme","root","width","height","position","bottom","zIndex","CONTROLLER","sizeAndBetActionsCont","marginLeft","display","flexDirection","betActionsCont","justifyContent","alignItems","betSizeCont","sliderCont","paddingTop","amounts","slider","button","backgroundColor","sizeButton","MissionControl","props","classes","heroStack","pot","missionControl","betAmt","setBetAmt","changeBetAmonut","newAmt","Math","min","floor","onBet","console","log","send","onFold","onCheckCall","color","e","v","random"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { server } from \"./api/ws\";\n\nimport blue from \"@material-ui/core/colors/blue\";\nimport red from \"@material-ui/core/colors/red\";\nimport green from \"@material-ui/core/colors/green\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Slider from \"@material-ui/core/Slider\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    height: \"10%\",\n    position: \"absolute\",\n    bottom: 0,\n    zIndex: 2,\n    ...theme.CONTROLLER,\n  },\n  sizeAndBetActionsCont: {\n    marginLeft: \"auto\",\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"row-reverse\",\n  },\n  betActionsCont: {\n    width: \"30%\",\n    height: \"100%\",\n    display: \"flex\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n  },\n  betSizeCont: {\n    width: \"30%\",\n  },\n  sliderCont: {\n    paddingTop: 10,\n    width: \"100%\",\n  },\n  amounts: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"space-evenly\",\n  },\n  slider: {\n    width: \"100%\",\n  },\n  button: {\n    width: \"30%\",\n    height: \"50%\",\n    backgroundColor: \"white\",\n  },\n  sizeButton: {\n    backgroundColor: \"white\",\n  },\n}));\n\nfunction MissionControl(props) {\n  const classes = useStyles();\n  const { heroStack, pot } = props.missionControl;\n\n  const [betAmt, setBetAmt] = useState(0);\n\n  const changeBetAmonut = (newAmt) => {\n    setBetAmt(Math.min(Math.floor(newAmt), heroStack));\n  };\n\n  function onBet() {\n    console.log(\"bet\");\n    server.send(\"bet!\");\n  }\n  function onFold() {\n    server.send(\"fold!\");\n  }\n  function onCheckCall() {\n    server.send(\"check!\");\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.sizeAndBetActionsCont}>\n        <div className={classes.betActionsCont}>\n          <Button\n            variant=\"contained\"\n            className={classes.button}\n            style={{ color: green[800] }}\n            onClick={() => onBet()}\n          >\n            Bet\n          </Button>\n          <Button\n            variant=\"contained\"\n            className={classes.button}\n            style={{ color: red[800] }}\n            onClick={() => onFold()}\n          >\n            Fold\n          </Button>\n          <Button\n            variant=\"contained\"\n            className={classes.button}\n            style={{ color: blue[800] }}\n            onClick={() => onCheckCall()}\n          >\n            Check\n          </Button>\n        </div>\n        <div className={classes.betSizeCont}>\n          <div className={classes.sliderCont}>\n            <Slider\n              className={classes.slider}\n              value={betAmt}\n              step={1}\n              valueLabelDisplay=\"on\"\n              min={0}\n              max={heroStack}\n              onChange={(e, v) => setBetAmt(v)}\n            />\n          </div>\n          <div className={classes.amounts}>\n            <Button\n              variant=\"outlined\"\n              className={classes.sizeButton}\n              onClick={(e) => changeBetAmonut(pot * 0.5)}\n            >\n              1/2\n            </Button>\n            <Button\n              variant=\"outlined\"\n              className={classes.sizeButton}\n              onClick={(e) => changeBetAmonut(pot * 0.75)}\n            >\n              3/4\n            </Button>\n            <Button\n              variant=\"outlined\"\n              className={classes.sizeButton}\n              onClick={(e) => changeBetAmonut(pot * 1)}\n            >\n              Pot\n            </Button>\n            <Button\n              variant=\"outlined\"\n              className={classes.sizeButton}\n              onClick={(e) => changeBetAmonut(pot * (Math.random() + 1))}\n            >\n              Overbet\n            </Button>\n            <Button\n              variant=\"outlined\"\n              className={classes.sizeButton}\n              onClick={(e) => changeBetAmonut(heroStack)}\n            >\n              Shuv\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MissionControl;\n"]},"metadata":{},"sourceType":"module"}