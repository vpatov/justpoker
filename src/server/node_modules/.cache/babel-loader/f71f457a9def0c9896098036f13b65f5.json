{"ast":null,"code":"import _objectSpread from\"/home/vasia/repos/poker_web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{Fragment,useState}from\"react\";import Player from\"./Player\";import OpenSeat from\"./OpenSeat\";import Card from\"./Card\";import{makeStyles}from\"@material-ui/core/styles\";import green from\"@material-ui/core/colors/green\";import blue from\"@material-ui/core/colors/blue\";import Typography from\"@material-ui/core/Typography\";var tableHeightPercent=65;var tableWidthPercent=65;var tableAspectRatio=tableWidthPercent/tableHeightPercent;var useStyles=makeStyles(function(theme){return{root:_objectSpread({height:\"100%\",width:\"100%\",display:\"flex\",justifyContent:\"center\",alignItems:\"center\"},theme.BACKGROUND),table:_objectSpread({transform:\"translateY(-8%)\",height:tableHeightPercent+\"%\",width:tableWidthPercent+\"%\",borderRadius:\"50%\",margin:\"auto\",display:\"flex\",justifyContent:\"center\",alignItems:\"center\",flexDirection:\"column\"},theme.TABLE),spot:{position:\"absolute\"},communityCards:{height:\"25%\",width:\"65%\",display:\"flex\",justifyContent:\"flex-start\"},pot:{fontSize:42,position:\"absolute\",transform:\"translateY(-12vh)\",backgroundColor:\"rgba(0,0,0,0.4)\",color:\"white\",borderRadius:40,padding:\"12px 36px\"},button:{position:\"absolute\",zIndex:10,backgroundColor:\"gold\",width:30},bet:_objectSpread({position:\"absolute\",fontSize:\"16px\",borderRadius:30,minWidth:\"30px\",padding:\"0 10px\",height:\"40px\",display:\"flex\",justifyContent:\"center\",alignItems:\"center\",zIndex:2},theme.BET)};});function Table(props){var classes=useStyles();var _props$table=props.table,players=_props$table.players,communityCards=_props$table.communityCards,spots=_props$table.spots,pot=_props$table.pot;var playerPosScale=0.35;var betPosScale=0.27;function createSpotsAtTable(){var ans=[];var _loop=function _loop(index){var xPos=Math.cos(2*3.14*index/spots)*window.innerWidth*tableAspectRatio;var yPos=Math.sin(2*3.14*index/spots)*window.innerHeight;var player=players.find(function(p){return p.position===index;});if(player){ans.push(/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Player,{player:player,className:classes.spot,style:{transform:\"translate(\".concat(xPos*playerPosScale,\"px,\").concat(yPos*playerPosScale,\"px)\")}}),player.bet?/*#__PURE__*/React.createElement(\"div\",{className:classes.bet,style:{transform:\"translate(\".concat(xPos*betPosScale,\"px,\").concat(yPos*betPosScale,\"px)\")}},player.bet):null));}else{ans.push(/*#__PURE__*/React.createElement(OpenSeat,{className:classes.spot,style:{transform:\"translate(\".concat(xPos*playerPosScale,\"px,\").concat(yPos*playerPosScale,\"px)\")}}));}};for(var index=0;index<spots;index++){_loop(index);}return ans;}return/*#__PURE__*/React.createElement(\"div\",{className:classes.root},/*#__PURE__*/React.createElement(\"div\",{className:classes.table},/*#__PURE__*/React.createElement(\"div\",{className:classes.pot},/*#__PURE__*/React.createElement(Typography,{variant:\"h4\"},\"POT: \".concat(pot))),/*#__PURE__*/React.createElement(\"div\",{className:classes.communityCards},communityCards.map(function(c){return/*#__PURE__*/React.createElement(Card,{suit:c.suit,number:c.number,fontSize:44,style:{width:\"18%\",margin:6}});})),createSpotsAtTable()));}export default Table;","map":{"version":3,"sources":["/home/vasia/repos/poker_web/src/ui/Table.js"],"names":["React","Fragment","useState","Player","OpenSeat","Card","makeStyles","green","blue","Typography","tableHeightPercent","tableWidthPercent","tableAspectRatio","useStyles","theme","root","height","width","display","justifyContent","alignItems","BACKGROUND","table","transform","borderRadius","margin","flexDirection","TABLE","spot","position","communityCards","pot","fontSize","backgroundColor","color","padding","button","zIndex","bet","minWidth","BET","Table","props","classes","players","spots","playerPosScale","betPosScale","createSpotsAtTable","ans","index","xPos","Math","cos","window","innerWidth","yPos","sin","innerHeight","player","find","p","push","map","c","suit","number"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport Player from \"./Player\";\nimport OpenSeat from \"./OpenSeat\";\nimport Card from \"./Card\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport green from \"@material-ui/core/colors/green\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst tableHeightPercent = 65;\nconst tableWidthPercent = 65;\nconst tableAspectRatio = tableWidthPercent / tableHeightPercent;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100%\",\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    ...theme.BACKGROUND,\n  },\n  table: {\n    transform: \"translateY(-8%)\",\n    height: tableHeightPercent + \"%\",\n    width: tableWidthPercent + \"%\",\n    borderRadius: \"50%\",\n    margin: \"auto\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    ...theme.TABLE,\n  },\n  spot: {\n    position: \"absolute\",\n  },\n  communityCards: {\n    height: \"25%\",\n    width: \"65%\",\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n  },\n  pot: {\n    fontSize: 42,\n    position: \"absolute\",\n    transform: \"translateY(-12vh)\",\n    backgroundColor: \"rgba(0,0,0,0.4)\",\n    color: \"white\",\n    borderRadius: 40,\n    padding: \"12px 36px\",\n  },\n  button: {\n    position: \"absolute\",\n    zIndex: 10,\n    backgroundColor: \"gold\",\n    width: 30,\n  },\n\n  bet: {\n    position: \"absolute\",\n    fontSize: \"16px\",\n    borderRadius: 30,\n    minWidth: \"30px\",\n    padding: \"0 10px\",\n    height: \"40px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    zIndex: 2,\n    ...theme.BET,\n  },\n}));\n\nfunction Table(props) {\n  const classes = useStyles();\n  const { players, communityCards, spots, pot } = props.table;\n\n  const playerPosScale = 0.35;\n  const betPosScale = 0.27;\n\n  function createSpotsAtTable() {\n    const ans = [];\n\n    for (let index = 0; index < spots; index++) {\n      const xPos =\n        Math.cos((2 * 3.14 * index) / spots) *\n        window.innerWidth *\n        tableAspectRatio;\n      const yPos = Math.sin((2 * 3.14 * index) / spots) * window.innerHeight;\n\n      const player = players.find((p) => p.position === index);\n      if (player) {\n        ans.push(\n          <Fragment>\n            <Player\n              player={player}\n              className={classes.spot}\n              style={{\n                transform: `translate(${xPos * playerPosScale}px,${\n                  yPos * playerPosScale\n                }px)`,\n              }}\n            />\n            {player.bet ? (\n              <div\n                className={classes.bet}\n                style={{\n                  transform: `translate(${xPos * betPosScale}px,${\n                    yPos * betPosScale\n                  }px)`,\n                }}\n              >\n                {player.bet}\n              </div>\n            ) : null}\n          </Fragment>\n        );\n      } else {\n        ans.push(\n          <OpenSeat\n            className={classes.spot}\n            style={{\n              transform: `translate(${xPos * playerPosScale}px,${\n                yPos * playerPosScale\n              }px)`,\n            }}\n          />\n        );\n      }\n    }\n    return ans;\n  }\n  return (\n    <div className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes.pot}>\n          <Typography variant=\"h4\">{`POT: ${pot}`}</Typography>\n        </div>\n        <div className={classes.communityCards}>\n          {communityCards.map((c) => (\n            <Card\n              suit={c.suit}\n              number={c.number}\n              fontSize={44}\n              style={{\n                width: \"18%\",\n                margin: 6,\n              }}\n            />\n          ))}\n        </div>\n        {createSpotsAtTable()}\n      </div>\n    </div>\n  );\n}\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}